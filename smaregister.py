from pyModbusTCP.client import ModbusClient
from pymodbus.constants import Endian
from pymodbus.payload import BinaryPayloadDecoder

class device_info:
  def __init__(self, address, unit, type, name):
    self.address = address
    self.unit = unit
    self.type = type
    self.name = name
devs32 = []
devs64 = []

try:
  global client
  client = ModbusClient("192.168.100.137", 502, 3)
  client.close()
  client.open()
except:
  print("SMA Inverter connection problem")

devs32.append(device_info(30001,"","RAW","Version:"))
devs32.append(device_info(30003,"","RAW","Device ID:"))
devs32.append(device_info(30005,"","RAW","Serial number:"))
devs32.append(device_info(30007,"","RAW",""))
devs32.append(device_info(30051,"","ENUM","Device class:"))
devs32.append(device_info(30053,"","ENUM","Device type:"))
devs32.append(device_info(30057,"","RAW","Serial number:"))
devs32.append(device_info(30059,"","FW",""))
devs32.append(device_info(30193,"s","DT","UTC System time:"))
devs32.append(device_info(30197,"","FIX0",""))
devs32.append(device_info(30199,"s","Duration",""))
devs32.append(device_info(30201,"","ENUM","Current state"))
devs32.append(device_info(30203,"W","FIX0",""))
devs32.append(device_info(30205,"W","FIX0",""))
devs32.append(device_info(30207,"W","FIX0",""))
devs32.append(device_info(30211,"","ENUM",""))
devs32.append(device_info(30213,"","ENUM",""))
devs32.append(device_info(30215,"","ENUM",""))
devs32.append(device_info(30217,"","ENUM",""))
devs32.append(device_info(30219,"","ENUM",""))
devs32.append(device_info(30225,"ohms","FIX0",""))
devs32.append(device_info(30231,"W","FIX0",""))
devs32.append(device_info(30233,"W","FIX0","Accumulated power"))
devs32.append(device_info(30247,"","FIX0",""))
devs32.append(device_info(30529,"Wh","FIX0",""))
devs32.append(device_info(30531,"kWh","FIX0",""))
devs32.append(device_info(30533,"MWh","FIX0",""))
devs32.append(device_info(30535,"Wh","FIX0",""))
devs32.append(device_info(30537,"kWh","FIX0",""))
devs32.append(device_info(30539,"MWh","FIX0",""))
devs32.append(device_info(30541,"s","Duration",""))
devs32.append(device_info(30543,"s","Duration",""))
devs32.append(device_info(30559,"","FIX0",""))
devs32.append(device_info(30561,"","FIX0",""))
devs32.append(device_info(30563,"","FIX0",""))
devs32.append(device_info(30583,"Wh","FIX0",""))
devs32.append(device_info(30599,"","FIX0",""))
devs32.append(device_info(30783,"V","FIX2",""))
devs32.append(device_info(30785,"V","FIX2",""))
devs32.append(device_info(30787,"V","FIX2",""))
devs32.append(device_info(30795,"A","FIX3",""))
devs32.append(device_info(30803,"Hz","FIX2",""))
devs32.append(device_info(30825,"","ENUM",""))
devs32.append(device_info(30833,"","ENUM",""))
devs32.append(device_info(30835,"","ENUM",""))
devs32.append(device_info(30837,"W","FIX0",""))
devs32.append(device_info(30839,"%","FIX0",""))
devs32.append(device_info(30881,"","ENUM",""))
devs32.append(device_info(30919,"","ENUM",""))
devs32.append(device_info(30925,"","ENUM",""))
devs32.append(device_info(30927,"","ENUM",""))
devs32.append(device_info(30929,"","ENUM",""))
devs32.append(device_info(30931,"","ENUM",""))
devs32.append(device_info(30933,"","ENUM",""))
devs32.append(device_info(30935,"","ENUM",""))
devs32.append(device_info(30949,"","FIX3",""))
devs32.append(device_info(30953,"°C","TEMP","Internal temp.:"))
devs32.append(device_info(31085,"W","FIX0",""))
devs32.append(device_info(34609,"°C","FIX0","Ambient temp.:"))
devs32.append(device_info(34621,"°C","FIX0","PV temp.:"))
devs32.append(device_info(40009,"","ENUM",""))
devs32.append(device_info(40013,"","ENUM",""))
devs32.append(device_info(40018,"","ENUM","Quick shut-down:"))
devs32.append(device_info(40025,"","ENUM",""))
devs32.append(device_info(40029,"","ENUM",""))
devs32.append(device_info(40063,"","FW",""))
devs32.append(device_info(40065,"","FW",""))
devs32.append(device_info(40067,"","RAW",""))
devs32.append(device_info(40095,"V","FIX2",""))
devs32.append(device_info(40109,"","ENUM",""))
devs32.append(device_info(40133,"V","FIX0",""))
devs32.append(device_info(40135,"Hz","FIX2",""))
devs32.append(device_info(40157,"","ENUM",""))
devs32.append(device_info(40185,"VA","FIX0",""))
devs32.append(device_info(40195,"VA","FIX0",""))
devs32.append(device_info(40200,"","ENUM",""))
devs32.append(device_info(40208,"","ENUM",""))
devs32.append(device_info(40210,"","ENUM",""))
devs32.append(device_info(40212,"W","FIX0",""))
devs32.append(device_info(40214,"%","FIX0",""))
devs32.append(device_info(40216,"","ENUM",""))
devs32.append(device_info(40218,"Hz","FIX2",""))
devs32.append(device_info(40220,"Hz","FIX2",""))
devs32.append(device_info(40222,"","FIX2",""))
devs32.append(device_info(40224,"","ENUM",""))
devs32.append(device_info(40226,"","FIX2",""))
devs32.append(device_info(40228,"","ENUM",""))
devs32.append(device_info(40230,"%","FIX0",""))
devs32.append(device_info(40232,"%","FIX0",""))
devs32.append(device_info(40234,"%","FIX0",""))
devs32.append(device_info(40238,"%","FIX0",""))
devs32.append(device_info(40240,"","ENUM",""))
devs32.append(device_info(40242,"%","FIX0",""))
devs32.append(device_info(40244,"","ENUM",""))
devs32.append(device_info(40250,"","ENUM",""))
devs32.append(device_info(40254,"%","FIX0",""))
devs32.append(device_info(40256,"%","FIX0",""))
devs32.append(device_info(40258,"s","FIX2",""))
devs32.append(device_info(40260,"","FIX0",""))
devs32.append(device_info(40428,"Hz","FIX2",""))
devs32.append(device_info(40430,"ms","FIX0",""))
devs32.append(device_info(40432,"Hz","FIX2",""))
devs32.append(device_info(40434,"ms","FIX0",""))
devs32.append(device_info(40436,"Hz","FIX2",""))
devs32.append(device_info(40438,"ms","FIX0",""))
devs32.append(device_info(40440,"Hz","FIX2",""))
devs32.append(device_info(40442,"ms","FIX0",""))
devs32.append(device_info(40446,"ms","FIX3",""))
devs32.append(device_info(40448,"V","FIX2",""))
devs32.append(device_info(40450,"ms","FIX0",""))
devs32.append(device_info(40452,"V","FIX2",""))
devs32.append(device_info(40456,"ms","FIX0",""))
devs32.append(device_info(40458,"V","FIX2",""))
devs32.append(device_info(40462,"ms","FIX0",""))
devs32.append(device_info(40464,"V","FIX2",""))
devs32.append(device_info(40466,"ms","FIX0",""))
devs32.append(device_info(40472,"V","FIX0",""))
devs32.append(device_info(40482,"%","FIX0",""))
devs32.append(device_info(40484,"","ENUM",""))
devs32.append(device_info(40490,"%","FIX1",""))
devs32.append(device_info(40575,"","ENUM",""))
devs32.append(device_info(40789,"","REV",""))
devs32.append(device_info(40809,"","FIX0",""))
devs32.append(device_info(40915,"W","FIX0",""))
devs32.append(device_info(40997,"%","FIX0",""))
devs32.append(device_info(41017,"s","FIX1",""))
devs32.append(device_info(41019,"%","FIX1",""))
devs32.append(device_info(41021,"%","FIX1",""))
devs32.append(device_info(41023,"","FIX0",""))
devs32.append(device_info(41025,"","ENUM",""))
devs32.append(device_info(41027,"","ENUM",""))
devs32.append(device_info(41065,"s","FIX1",""))
devs32.append(device_info(41067,"%","FIX1",""))
devs32.append(device_info(41069,"%","FIX1",""))
devs32.append(device_info(41071,"","FIX0",""))
devs32.append(device_info(41073,"","ENUM",""))
devs32.append(device_info(41075,"","ENUM",""))
devs32.append(device_info(41111,"V","FIX2",""))
devs32.append(device_info(41113,"ms","FIX0",""))
devs32.append(device_info(41115,"V","FIX2",""))
devs32.append(device_info(41117,"ms","FIX0",""))
devs32.append(device_info(41121,"","FUNKTION_SEC",""))
devs32.append(device_info(41123,"V","FIX2",""))
devs32.append(device_info(41125,"V","FIX2",""))
devs32.append(device_info(41127,"Hz","FIX2",""))
devs32.append(device_info(41129,"Hz","FIX2",""))
devs32.append(device_info(41131,"V","FIX2",""))
devs32.append(device_info(41133,"V","FIX2",""))
devs32.append(device_info(41155,"s","FIX0",""))
devs32.append(device_info(41157,"s","FIX0",""))
devs32.append(device_info(41169,"ohms","FIX0",""))
devs32.append(device_info(41171,"kWh","FIX0",""))
devs32.append(device_info(41173,"h","Duration",""))
devs32.append(device_info(41193,"","ENUM",""))
devs32.append(device_info(41195,"s","Duration",""))
devs32.append(device_info(41197,"%","FIX2",""))
devs32.append(device_info(41219,"","ENUM",""))
devs32.append(device_info(41221,"s","Duration",""))
devs32.append(device_info(41225,"","ENUM",""))
devs32.append(device_info(41227,"s","Duration",""))

devs64.append(device_info(30513,"Wh","FIX0",""))
devs64.append(device_info(30517,"Wh","FIX0",""))
devs64.append(device_info(30521,"s","Duration",""))
devs64.append(device_info(30525,"s","Duration",""))
devs64.append(device_info(35377,"","FIX0",""))
devs64.append(device_info(35381,"","FIX0",""))
devs64.append(device_info(35385,"","FIX0",""))


for dev in devs32:
  valueread = client.read_holding_registers(dev.address, 2)
  value = BinaryPayloadDecoder.fromRegisters(valueread, Endian.Big, Endian.Big).decode_32bit_uint()
  if dev.type == "FIX1":
    print("{:<16}".format(dev.name),value/10,dev.unit)
  elif dev.type == "FIX2":
    print("{:<16}".format(dev.name),value/100,dev.unit)
  elif dev.type == "FIX3":
    print("{:<16}".format(dev.name),value/1000,dev.unit)
  elif dev.type == "TEMP":
    print("{:<16}".format(dev.name),value/10,dev.unit)
  else:
    print("{:<16}".format(dev.name),value,dev.unit)

for dev in devs64:
  valueread = client.read_holding_registers(dev.address, 4)
  value = BinaryPayloadDecoder.fromRegisters(valueread, Endian.Big, Endian.Big).decode_64bit_uint()
  if dev.type == "FIX1":
    print(dev.name,value/10,dev.unit)
  elif dev.type == "FIX2":
    print(dev.name,value/100,dev.unit)
  elif dev.type == "FIX3":
    print(dev.name,value/1000,dev.unit)
  else:
    print(dev.name,value,dev.unit)
